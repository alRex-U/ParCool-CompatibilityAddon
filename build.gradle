buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, 'parcool_compat_addon.refmap.json'
    config 'parcool_compat_addon.mixins.json'
}

var mod_version_name = "${parcool_version}-${mod_version}"

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                parcool_compat_addon {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                parcool_compat_addon {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'parcool_compat_addon', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                parcool_compat_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://www.cursemaven.com' }
}
dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    runtimeOnly fg.deobf("curse.maven:parcool-482378:${parcool_file_id}")
    compileOnly fg.deobf("curse.maven:parcool-482378:${parcool_file_id}")
    runtimeOnly fg.deobf("curse.maven:Timeless_and_Classics_Zero-1028108:${TaCZ_file_id}")
    compileOnly fg.deobf("curse.maven:Timeless_and_Classics_Zero-1028108:${TaCZ_file_id}")
    runtimeOnly fg.deobf("curse.maven:BetterCombat-639842:${BetterCombat_file_id}")
    compileOnly fg.deobf("curse.maven:BetterCombat-639842:${BetterCombat_file_id}")
    runtimeOnly fg.deobf("curse.maven:playerAnimator-658587:${playerAnimator_file_id}")
    compileOnly fg.deobf("curse.maven:playerAnimator-658587:${playerAnimator_file_id}")
    runtimeOnly fg.deobf("curse.maven:ClothConfig-348521:${ClothConfig_file_id}")
    compileOnly fg.deobf("curse.maven:ClothConfig-348521:${ClothConfig_file_id}")
    runtimeOnly fg.deobf("curse.maven:CarryOn-274259:${CarryOn_file_id}")
    compileOnly fg.deobf("curse.maven:CarryOn-274259:${CarryOn_file_id}")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : author,
                "Specification-Version"   : mod_version_name,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : mod_version_name,
                "Implementation-Vendor"   : author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs"            : "parcool.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}